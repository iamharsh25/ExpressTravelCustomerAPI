{"remainingRequest":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Express travel Project\\express-travel-customer-ui\\src\\components\\Contact.vue?vue&type=style&index=0&id=cf6573c0&lang=css","dependencies":[{"path":"D:\\Express travel Project\\express-travel-customer-ui\\src\\components\\Contact.vue","mtime":1641134273751},{"path":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Express travel Project\\express-travel-customer-ui\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnRhYmxlLHRoLHRkIHsKICBib3JkZXI6IDFweCBzb2xpZCByZWQ7Cn0K"},{"version":3,"sources":["D:\\Express travel Project\\express-travel-customer-ui\\src\\components\\Contact.vue"],"names":[],"mappings":";AAuNA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB","file":"D:/Express travel Project/express-travel-customer-ui/src/components/Contact.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <h1>Contact Information</h1>\n    <table>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>DOB</th>\n        <th>IsStaff</th>\n      </tr>\n      <tr v-for=\"c in contact\" :key=\"c.contactId\">\n        <td>{{ c.contactId }}</td>\n        <td>{{ getName(c) }}</td>\n        <td>{{ formatDate(c.dob) }}</td>\n        <td>{{ c.isStaff }}</td>\n        <td>\n          <input type=\"button\" value=\"Edit\" @click=\"onEdit(c)\"/>\n          <input type=\"button\" value=\"Delete\" @click=\"onDelete(c.contactId)\" />\n        </td>\n      </tr>\n    </table>\n  </div>\n  <br />\n  <br />\n  <div>\n    <form>\n      <label for=\"search\">Search: </label>\n      <input type=\"text\" v-model=\"searchId\" placeholder=\"Enter ContactId\" />\n      <input type=\"button\" value=\"Search\" @click=\"onSearch\"/>\n      <br>\n      <br>\n      <label for=\"salutation\">Salutation:</label>\n      <select v-if=\"reference\" v-model=\"entity.salutationId\" name=\"salutation\" id=\"salutation\">\n        <option v-for=\"s in getSalutation()\"\n        :key=\"s.referenceId\"\n        :value=\"s.referenceId\">{{ s.refText }}\n        </option>\n      </select>\n      <br>\n      <br>\n      <label for=\"fname\">First name:</label>\n      <input type=\"text\" id=\"fname\" name=\"fname\" v-model=\"entity.firstName\" /><br /><br />\n      \n      <label for=\"lname\">Last name:</label>\n      <input type=\"text\" id=\"lname\" name=\"lname\" v-model=\"entity.lastName\" /><br /><br />\n      \n      <label for=\"dob\">DOB:</label>\n      <input type=\"date\" id=\"dob\"\n       name=\"dob\" :max=\"getMaxDate()\" v-model=\"entity.dob\"><br /><br />\n\n      <label for=\"isStaff\">IsStaff:</label>\n      <input type=\"radio\" id=\"active\" name=\"status\" :value=\"true\" v-model=\"entity.isStaff\">\n      <label for=\"active\">Active</label>\n      <input type=\"radio\" id=\"inactive\" name=\"status\" :value=\"false\" v-model=\"entity.isStaff\">\n      <label for=\"inactive\">In-Active</label>\n      <br>\n      <br>\n      <input v-if=\"isUpdate\" type=\"button\" value=\"Update\" @click=\"onUpdate()\" />\n      <input v-else type=\"button\" value=\"Insert\" @click=\"onInsert()\"/>\n    </form>\n  </div>\n</template>\n\n<script>\nimport ContactService from \"../ContactService\";\n\n// Vue.use(VueAxios,axios)\nexport default {\n  name: \"Contact\",\n  data() {\n    return {\n      contact: [],\n      reference: [],\n      entity: {\n        salutationId: 1,\n        firstName: '',\n        lastName: '',\n        dob: this.formatDateCal(new Date()),\n        isStaff: false\n      },\n      isUpdate: false,\n      selectedContactId: 0,\n      searchId: null\n    };\n  },\n  created() {\n    this.getContact();\n    this.getReference();\n  },\n  methods: {\n    getContact() {\n      ContactService.getAllContacts()\n        .then((response) => {\n          this.contact = response.data;\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    getReference() {\n      ContactService.getAllReference()\n        .then((response) => {\n          this.reference = response.data;\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    formatDate(datevalue) {\n      var date = new Date(datevalue);\n      return (\n        (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()) +\n        \"/\" + \n        (date.getMonth() > 8\n          ? date.getMonth() + 1\n          : \"0\" + (date.getMonth() + 1)) +\n        \"/\" +\n        date.getFullYear()\n      );\n    },\n    getName(entity) {\n      var temp = this.reference.find(\n        (s) => s.referenceId === entity.salutationId\n      );\n      if (temp)\n        return temp.refText + \" \" + entity.firstName + \" \" + entity.lastName;\n    },\n    getSalutation() {\n      return this.reference.filter((s) => s.refType === 'SAL')\n    },\n    onEdit(value) {\n      var temp = this.reference.find(\n        (s) => s.referenceId === value.salutationId\n      );\n      console.log(\"OnEdit -> \", value)\n      this.entity.salutationId = temp.referenceId\n      this.entity.firstName = value.firstName\n      this.entity.lastName = value.lastName\n      this.entity.dob = this.formatDateCal(value.dob)\n      this.entity.isStaff = value.isStaff\n      this.selectedContactId = value.contactId\n      this.isUpdate = true\n    },\n    onUpdate() {\n      console.log(this.selectedContactId)\n      console.log(this.entity)\n      ContactService.putContact(this.selectedContactId, this.entity)\n        .then((response) => {\n          this.reference = response.data;\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    onDelete(id) {\n      ContactService.deleteContact(id)\n        .then((response) => {\n          this.reference = response.data;\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    onInsert() {\n      ContactService.postContact(this.entity)\n        .then((response) => {\n          this.reference = response.data;\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    onSearch() {\n      ContactService.getContactById(this.searchId)\n        .then((response) => {\n          this.entity = response.data;\n          this.entity.dob = this.formatDateCal(this.entity.dob)\n          this.selectedContactId = response.data.contactId\n          // console.log(this.selectedContactId);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n\n        this.isUpdate = true;\n    },\n    formatDateCal(dateValue) {\n      var date = new Date(dateValue);\n      return (\n        date.getFullYear() + \"-\" +\n        (date.getMonth() > 8\n          ? date.getMonth() + 1\n          : \"0\" + (date.getMonth() + 1)) + \"-\" +\n        (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate())\n      );\n    },\n    getMaxDate() {\n      var date = new Date();\n      return (\n        date.getFullYear() - 18 + \"-\" +\n        (date.getMonth() > 8\n          ? date.getMonth() + 1\n          : \"0\" + (date.getMonth() + 1)) + \"-\" +\n        (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate())\n      );\n    }\n  },\n};\n</script>\n<style>\ntable,th,td {\n  border: 1px solid red;\n}\n</style>"]}]}